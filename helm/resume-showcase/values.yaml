# Default values for resume-showcase
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
namespace: resume-showcase

# Image registry configuration
# k3s local container registry
imageRegistry: registry.psyk3s.local:5000
imagePullSecrets: []
  # - name: regcred

# WebSocket Server configuration (StatefulSet)
websocketServer:
  name: websocket-server
  replicaCount: 3  # Creates pods: websocket-server-0, websocket-server-1, websocket-server-2

  image:
    repository: resume-showcase-websocket
    tag: latest
    pullPolicy: Always

  service:
    # Headless service (clusterIP: None) for StatefulSet
    # Provides stable DNS names: websocket-server-{0..N}.websocket-server.resume-showcase.svc.cluster.local
    port: 8080
    targetPort: 8080

  resources:
    requests:
      cpu: 10m       # 10x current usage (1m)
      memory: 30Mi   # 2x current usage (15Mi)
    limits:
      cpu: 100m      # Minimum 100m for burst capacity
      memory: 256Mi  # 4x current usage (60Mi), rounded up to nearest 256Mi

  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 3
    periodSeconds: 5

# Session Provisioner configuration (StatefulSet)
sessionProvisioner:
  name: session-provisioner
  replicaCount: 1  # Must be 1 to avoid duplicate pool management (creates session-provisioner-0)

  image:
    repository: resume-showcase-provisioner
    tag: latest
    pullPolicy: Always

  service:
    # Headless service (clusterIP: None) for StatefulSet
    # Provides stable DNS: session-provisioner-0.session-provisioner.resume-showcase.svc.cluster.local
    port: 8081
    targetPort: 8081

  # Configuration for warm pod pool
  warmPoolSize: 2  # Number of pre-provisioned pods ready for instant assignment

  # WebSocket server image to use for spawned pods
  # This should match websocketServer.image above
  websocketImage:
    repository: resume-showcase-websocket
    tag: latest

  resources:
    requests:
      cpu: 10m       # 10x current usage (1m)
      memory: 146Mi  # 2x current usage (73Mi)
    limits:
      cpu: 100m      # Minimum 100m for burst capacity
      memory: 512Mi  # 4x current usage (292Mi), rounded up to nearest 256Mi

  livenessProbe:
    httpGet:
      path: /health
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /health
      port: 8081
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3

# Ingress configuration for k3s Traefik
ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.priority: "10"

  # Your domain name
  host: resume-showcase.k3s.christianmoore.me

  # TLS configuration
  tls:
    enabled: true
    secretName: resume-showcase-tls
    # For cert-manager integration
    certManager:
      enabled: true
      issuer: letsencrypt-production
      issuerKind: ClusterIssuer

  # Path routing
  paths:
    # Session provisioner API
    session:
      path: /session
      pathType: Prefix
      service: session-provisioner
    # WebSocket connections
    websocket:
      path: /
      pathType: Prefix
      service: websocket-server

# RBAC for session provisioner
rbac:
  create: true
  # Service account name for session provisioner
  serviceAccountName: session-provisioner

# Pre-upgrade cleanup hook
# Automatically deletes old session pods/jobs before upgrades
cleanup:
  enabled: true
  image:
    repository: bitnami/kubectl
    tag: latest
    pullPolicy: IfNotPresent

# Pod security context
podSecurityContext:
  runAsNonRoot: false
  # runAsUser: 1000
  # fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

# Node selector for pod placement
nodeSelector: {}

# Tolerations for pod scheduling
tolerations: []

# Affinity rules
affinity: {}
