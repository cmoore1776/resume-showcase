{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "resume-showcase.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "resume-showcase.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if and .Values.ingress.tls.enabled (hasKey .Values.ingress.tls "certManager") }}
    {{- if .Values.ingress.tls.certManager.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.certManager.issuer }}
    {{- end }}
    {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      # Session provisioner API - must come first for more specific path matching
      - path: {{ .Values.ingress.paths.session.path }}
        pathType: {{ .Values.ingress.paths.session.pathType }}
        backend:
          service:
            name: {{ .Values.sessionProvisioner.name }}
            port:
              number: {{ .Values.sessionProvisioner.service.port }}
      # WebSocket connections - catch-all path
      - path: {{ .Values.ingress.paths.websocket.path }}
        pathType: {{ .Values.ingress.paths.websocket.pathType }}
        backend:
          service:
            name: {{ .Values.websocketServer.name }}
            port:
              number: {{ .Values.websocketServer.service.port }}
{{- end }}
